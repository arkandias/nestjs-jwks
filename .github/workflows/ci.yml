name: CI

on:
  push:
    branches:
      - "**"
    tags:
      - "*"

permissions:
  contents: write

concurrency:
  group: ci-${{ github.ref_name }}
  cancel-in-progress: ${{ github.ref_type == 'branch' }}

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - uses: ./.github/actions/setup
      - name: Format check with Prettier
        run: pnpm run format:check

  typecheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - uses: ./.github/actions/setup
      - name: Type check with TypeScript
        run: pnpm run typecheck

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - uses: ./.github/actions/setup
      - name: Lint with ESLint
        run: pnpm run lint

  release:
    if: github.ref_type == 'tag'
    runs-on: ubuntu-latest
    needs: [format, typecheck, lint]
    steps:
      - name: Check if tag matches version pattern
        id: check_tag
        run: |
          TAG_NAME=${{ github.ref_name }}
          if [[ $TAG_NAME =~ ^v[0-9]+\.[0-9]+\.[0-9]+(-[a-z0-9.]+)?$ ]]; then
            VERSION=${TAG_NAME#v}
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "should_release=true" >> $GITHUB_OUTPUT
            echo "✅ Tag matches version pattern: $TAG_NAME -> $VERSION"
          else
            echo "should_release=false" >> $GITHUB_OUTPUT
            echo "❌ Tag does not match version pattern: $TAG_NAME"
          fi
      - name: Checkout repository
        if: steps.check_tag.outputs.should_release == 'true'
        uses: actions/checkout@v5
      - name: Check if version matches VERSION file
        if: steps.check_tag.outputs.should_release == 'true'
        run: |
          [[ "${{ steps.check_tag.outputs.version }}" == "$(cat VERSION)" ]] || exit 1
      - name: Create GitHub Release
        if: steps.check_tag.outputs.should_release == 'true'
        env:
          # Use PAT instead of github.token to allow triggering the release workflow
          GH_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        run: |
          TAG_NAME="${{ github.ref_name }}"
          PRERELEASE_FLAG=""

          # Check if tag contains prerelease keywords
          if [[ $TAG_NAME =~ -(alpha|beta|canary|dev|edge|next|rc) ]]; then
            PRERELEASE_FLAG="--prerelease"
          fi

          gh release create ${{ github.ref_name }} \
            --title "${{ steps.check_tag.outputs.version }}" \
            --generate-notes \
            $PRERELEASE_FLAG
